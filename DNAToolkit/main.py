
from DNAToolkit import *

import random

DNAstring="CTGACACCGAATTTAAACTTGCCCCCAATTGCGATCTACTTGACCCTCAAGCGTAAAAAAATTTTACATTGTCTCCGTCGCTCGCCCAGACAAGGGAGTGACTTGGGTTCGCTAACGATAGAGCCCCGGGGGTGTGGTATATGTTACGTCGTTCTCCAACTCCAACGAGCGAGACAAATCGACATGGGTTCTACACACCAGAGGGTAAGGTCCCTAAAGCACTTGATTAGTACAGTCATCATAGCCTAGTCACAATTCAGCTCGGTTCAGTCGCAATGGACCGTTGATGACAACATATCTTGGTTGCGGTTAAATCGGCTTTCACGAACAGCAGGAAGGCCTTGGAGAGTGCCTGCAGCCATCAGCCAACACGTTATACTGAGTTTGAACTCCGTCGGACGAGCCTTACTCAGAGCCACCAGACTATTGCAGGCTTGTGACGCTTAAACGTTTTTGGTGTCTTTTCGGTCGCTCACGGCTGAAGGCGTAAATACGCCCTAGAGGTACCTGGAGTGATCGCATCTCGTAGAAGTGTGTTACTACGGCCCCGTTATTTAAGCTGTCTCTAGCCTTGATGCTTGGGGTCATTATGTTGTAGGTTTGCCGTACTGTCGGGCCACAGCAGCGGATGTTATACTGCGTCGGACGTAGATGGACCCGACTCGACAAAGACCGCCTTTGGAGCTGATGCCAACCGCGAATTCCCAAAGGTACCGGGTCAACGACCAAACGCTAACAATCTACGTATGGAAGAAAAACCCACGCTGAGCGTTCAGTTCATATCGCGCTGGGCTGTCGTTAACATAGGCAATCGCCGGAGCTAGCAGCTCACAAGCCCCAGACATGTTTTTGGCCGTCACCCTG"
result=countNucFrequency(DNAstring)
print(" ".join(str(val) for key,val in result.items()))

Nucleotides=["A","C","G","T"]

randDNAstr="".join([random.choice(Nucleotides) for nuc in range(20)])


DNAstr=validateSeq(randDNAstr)

print(f"\nSequence: {DNAstr}\n")
print(f"[1] + Nucleotide Frequency: {countNucFrequency(DNAstr)}\n")
print(f"[2] + DNA/RNA Transcription: {transcription(DNAstr)}\n")
print(f"[3] + DNA Reverse Complement: {reverse_complement(DNAstr)}\n")

